import telebot
import ollama
import json
import logging
from datetime import datetime
from typing import Dict, List
import os
import venv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_TOKEN = MY_TOKEN
MODEL_NAME = 'qwen2.5:3b'
LOG_FILE = 'chat_history.log'
FAQ_FILE = 'faq.txt'

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏ (–º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å)
MODEL_OPTIONS = {
    'temperature': 0.8,  # –ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å (0.0-2.0)
    'num_ctx': 4096,  # –†–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (–ø–∞–º—è—Ç—å)
    'top_p': 0.9,  # Nucleus sampling
    'top_k': 40,  # Top-K sampling
    'repeat_penalty': 1.1,  # –®—Ç—Ä–∞—Ñ –∑–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è
    'seed': 42  # –î–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º–æ—Å—Ç–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
}

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
chat_histories: Dict[int, List[Dict]] = {}

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è FAQ
FAQ_CONTENT = ""

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    filename=LOG_FILE,
    level=logging.INFO,
    format='%(asctime)s - %(message)s',
    encoding='utf-8'
)

bot = telebot.TeleBot(BOT_TOKEN)


def load_faq() -> str:
    """–ó–∞–≥—Ä—É–∑–∫–∞ FAQ –∏–∑ —Ñ–∞–π–ª–∞"""
    global FAQ_CONTENT
    try:
        if os.path.exists(FAQ_FILE):
            with open(FAQ_FILE, 'r', encoding='utf-8') as f:
                FAQ_CONTENT = f.read().strip()
            print(f"‚úÖ FAQ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ {FAQ_FILE} ({len(FAQ_CONTENT)} —Å–∏–º–≤–æ–ª–æ–≤)")
            return FAQ_CONTENT
        else:
            print(f"‚ö†Ô∏è –§–∞–π–ª {FAQ_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π.")
            FAQ_CONTENT = ""
            return ""
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ FAQ: {str(e)}")
        FAQ_CONTENT = ""
        return ""


def log_message(user_id: int, username: str, role: str, content: str):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ñ–∞–π–ª"""
    log_entry = {
        'timestamp': datetime.now().isoformat(),
        'user_id': user_id,
        'username': username,
        'role': role,
        'content': content
    }
    logging.info(json.dumps(log_entry, ensure_ascii=False))


def get_chat_history(user_id: int) -> List[Dict]:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º –ø—Ä–æ–º–ø—Ç–æ–º"""
    if user_id not in chat_histories:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º –ø—Ä–æ–º–ø—Ç–æ–º
        system_prompt = "–¢—ã - –ø–æ–ª–µ–∑–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –û—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–¥—Ä–æ–±–Ω–æ –∏ —Ç–æ—á–Ω–æ."

        # –ï—Å–ª–∏ FAQ –∑–∞–≥—Ä—É–∂–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
        if FAQ_CONTENT:
            system_prompt = f"""–¢—ã - –ø–æ–ª–µ–∑–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. 

–ò—Å–ø–æ–ª—å–∑—É–π —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:

=== –ë–ê–ó–ê –ó–ù–ê–ù–ò–ô ===
{FAQ_CONTENT}
===================

–ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –µ—Å—Ç—å –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–π —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
–ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ—Ç –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π, –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–∏ –æ–±—â–∏–µ –∑–Ω–∞–Ω–∏—è.
–û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, —á–µ—Ç–∫–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ."""

        chat_histories[user_id] = [
            {
                'role': 'system',
                'content': system_prompt
            }
        ]

    return chat_histories[user_id]


def add_to_history(user_id: int, role: str, content: str):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é"""
    history = get_chat_history(user_id)
    history.append({
        'role': role,
        'content': content
    })

    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å–æ–æ–±—â–µ–Ω–∏–π + —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç)
    # –°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–≤–æ–µ, –ø–æ—ç—Ç–æ–º—É —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
    if len(history) > 21:  # 1 system + 20 —Å–æ–æ–±—â–µ–Ω–∏–π
        # –£–¥–∞–ª—è–µ–º –≤—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–ø–µ—Ä–≤–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ)
        history.pop(1)


@bot.message_handler(commands=['start'])
def start_command(message):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    user_id = message.from_user.id
    username = message.from_user.username or message.from_user.first_name

    faq_status = "‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞" if FAQ_CONTENT else "‚ö†Ô∏è –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞"

    welcome_text = (
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üëã\n\n"
        f"–Ø AI-–±–æ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–æ–¥–µ–ª–∏ {MODEL_NAME}.\n\n"
        f"–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π: {faq_status}\n\n"
        f"–¢–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n"
        f"‚Ä¢ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {MODEL_OPTIONS['temperature']}\n"
        f"‚Ä¢ –ö–æ–Ω—Ç–µ–∫—Å—Ç: {MODEL_OPTIONS['num_ctx']} —Ç–æ–∫–µ–Ω–æ–≤\n\n"
        f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        f"/start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã\n"
        f"/clear - –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é\n"
        f"/params - –ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã\n"
        f"/settemp <–∑–Ω–∞—á–µ–Ω–∏–µ> - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É (0.0-2.0)\n"
        f"/reload_faq - –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –±–∞–∑—É –∑–Ω–∞–Ω–∏–π\n"
        f"/faq_status - –°—Ç–∞—Ç—É—Å –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π"
    )

    bot.reply_to(message, welcome_text)
    log_message(user_id, username, 'system', '/start command')


@bot.message_handler(commands=['clear'])
def clear_history(message):
    """–û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞"""
    user_id = message.from_user.id
    username = message.from_user.username or message.from_user.first_name

    if user_id in chat_histories:
        # –£–¥–∞–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é, –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏ —Å–æ–∑–¥–∞—Å—Ç—Å—è –Ω–æ–≤–∞—è —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º –ø—Ä–æ–º–ø—Ç–æ–º
        del chat_histories[user_id]

    bot.reply_to(message, "‚úÖ –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –æ—á–∏—â–µ–Ω–∞!")
    log_message(user_id, username, 'system', 'History cleared')


@bot.message_handler(commands=['params'])
def show_params(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏"""
    params_text = "‚öôÔ∏è –¢–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏:\n\n"
    for key, value in MODEL_OPTIONS.items():
        params_text += f"‚Ä¢ {key}: {value}\n"

    bot.reply_to(message, params_text)


@bot.message_handler(commands=['settemp'])
def set_temperature(message):
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –º–æ–¥–µ–ª–∏"""
    try:
        temp = float(message.text.split()[1])
        if 0.0 <= temp <= 2.0:
            MODEL_OPTIONS['temperature'] = temp
            bot.reply_to(message, f"‚úÖ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {temp}")
        else:
            bot.reply_to(message, "‚ùå –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 0.0 –¥–æ 2.0")
    except (IndexError, ValueError):
        bot.reply_to(message, "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /settemp <–∑–Ω–∞—á–µ–Ω–∏–µ>\n–ü—Ä–∏–º–µ—Ä: /settemp 0.7")


@bot.message_handler(commands=['reload_faq'])
def reload_faq_command(message):
    """–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –∏–∑ —Ñ–∞–π–ª–∞"""
    user_id = message.from_user.id
    username = message.from_user.username or message.from_user.first_name

    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º FAQ
    load_faq()

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–æ–≤, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    chat_histories.clear()

    if FAQ_CONTENT:
        response_text = f"‚úÖ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞!\nüìÑ –†–∞–∑–º–µ—Ä: {len(FAQ_CONTENT)} —Å–∏–º–≤–æ–ª–æ–≤"
    else:
        response_text = f"‚ö†Ô∏è –§–∞–π–ª {FAQ_FILE} –ø—É—Å—Ç –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω."

    bot.reply_to(message, response_text)
    log_message(user_id, username, 'system', 'FAQ reloaded')


@bot.message_handler(commands=['faq_status'])
def faq_status_command(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π"""
    if FAQ_CONTENT:
        lines = FAQ_CONTENT.count('\n') + 1
        status_text = (
            f"üìö –°—Ç–∞—Ç—É—Å –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π:\n\n"
            f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞\n"
            f"üìÑ –§–∞–π–ª: {FAQ_FILE}\n"
            f"üìù –†–∞–∑–º–µ—Ä: {len(FAQ_CONTENT)} —Å–∏–º–≤–æ–ª–æ–≤\n"
            f"üìã –°—Ç—Ä–æ–∫: {lines}\n\n"
            f"–ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤:\n{FAQ_CONTENT[:200]}..."
        )
    else:
        status_text = (
            f"üìö –°—Ç–∞—Ç—É—Å –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π:\n\n"
            f"‚ö†Ô∏è –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞\n"
            f"üìÑ –û–∂–∏–¥–∞–µ–º—ã–π —Ñ–∞–π–ª: {FAQ_FILE}\n\n"
            f"–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª {FAQ_FILE} —Å –≤–∞—à–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π."
        )

    bot.reply_to(message, status_text)


@bot.message_handler(func=lambda message: True)
def handle_message(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_id = message.from_user.id
    username = message.from_user.username or message.from_user.first_name
    user_message = message.text

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    log_message(user_id, username, 'user', user_message)

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
    add_to_history(user_id, 'user', user_message)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ "–ø–µ—á–∞—Ç–∞–µ—Ç..."
    bot.send_chat_action(message.chat.id, 'typing')

    try:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        history = get_chat_history(user_id)

        # –ó–∞–ø—Ä–æ—Å –∫ Ollama
        response = ollama.chat(
            model=MODEL_NAME,
            messages=history,
            options=MODEL_OPTIONS,
            stream=False
        )

        ai_response = response['message']['content']

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
        add_to_history(user_id, 'assistant', ai_response)

        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
        log_message(user_id, username, 'assistant', ai_response)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
        bot.reply_to(message, ai_response)

    except Exception as e:
        error_message = f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"
        bot.reply_to(message, error_message)
        log_message(user_id, username, 'error', str(e))


if __name__ == '__main__':
    print(f"üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å –º–æ–¥–µ–ª—å—é {MODEL_NAME}")
    print(f"üìù –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ {LOG_FILE}")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º FAQ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    load_faq()

    print("‚è≥ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    bot.infinity_polling()
